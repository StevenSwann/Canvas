@model AuctionDTOs.ListingDetailDTO
@{
    ViewBag.Title = "Edit Listing";
    var categories = (IEnumerable<AuctionDTOs.ProductCategoryDTO>)ViewData["Categories"];
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h2>Edit Listing</h2>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ImageUrl, "Image URL", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ItemName, "Item Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price, "Price", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @if (Model.Bids.Count > 0)
                        {
                            @Html.DisplayFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.Price)
                        }
                        else
                        {
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        }                        
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, "Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @rows = "4" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCategory, "Product Category", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ProductCategory.ProductCategoryName, new SelectList(categories.Select(c => c.ProductCategoryName)), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AuctionEndTime, "End Time", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.AuctionEndTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.AuctionEndTime)
                        @Html.ValidationMessageFor(model => model.AuctionEndTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.Id, new { listingId = Model.Id})
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save Changes" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

